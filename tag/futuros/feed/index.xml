<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>futuros &#8211; Lógica Alternativa</title>
	<atom:link href="/tag/futuros/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>&#039;¿Otro blog de informática? ... Todavía no&#039; .- Cuaderno de bitácora de Miguel R. Esteban</description>
	<lastBuildDate>Fri, 23 Feb 2024 20:24:32 +0000</lastBuildDate>
	<language>es-ES</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.7.28</generator>
	<item>
		<title>Futuros y promesas,&#8230; y también monadas. Implementando el patrón</title>
		<link>/futuros-y-promesas-y-tambien-monadas-implementando-el-patron/</link>
		<pubDate>Tue, 15 Aug 2017 17:20:34 +0000</pubDate>
		<dc:creator><![CDATA[Miguel R. Esteban Martín]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[Patrones]]></category>
		<category><![CDATA[futuros]]></category>
		<category><![CDATA[patrones]]></category>

		<guid isPermaLink="false">/?p=1035</guid>
		<description><![CDATA[«Los modelos NIO no bloqueantes y la programación asíncrona y reactiva son paradigmas que poco a poco van adoptándose y utilizando más.» Los modelos NIO no bloqueantes y la programación asíncrona y reactiva son paradigmas que poco a poco van adoptándose y utilizando más. No creo que diga una tontería al afirmar que muy probablemente [&#8230;]]]></description>
		</item>
		<item>
		<title>Akka por ejemplos. Sobre supervisión, bus de eventos, &#8230;</title>
		<link>/akka-por-ejemplos-sobre-supervision-bus-de-eventos/</link>
		<pubDate>Sun, 25 Oct 2015 22:34:53 +0000</pubDate>
		<dc:creator><![CDATA[Miguel R. Esteban Martín]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[Programación]]></category>
		<category><![CDATA[actores]]></category>
		<category><![CDATA[akka]]></category>
		<category><![CDATA[bus de eventos]]></category>
		<category><![CDATA[futuros]]></category>
		<category><![CDATA[programación reactiva]]></category>
		<category><![CDATA[robustez]]></category>

		<guid isPermaLink="false">/?p=918</guid>
		<description><![CDATA[Esta es la segunda entrega de Akka por ejemplos. La primera trató sobre cual es el funcionamiento de la cola de mensajes de un actor, que es un router y como se envían mensajes entre actores. Ahora se tratarán temas como el control de fallos y la supervisión de actores, el bus de eventos de [&#8230;]]]></description>
		</item>
		<item>
		<title>Akka por ejemplos</title>
		<link>/akka-por-ejemplos/</link>
		<pubDate>Mon, 12 Oct 2015 18:45:56 +0000</pubDate>
		<dc:creator><![CDATA[Miguel R. Esteban Martín]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[Programación]]></category>
		<category><![CDATA[actores]]></category>
		<category><![CDATA[akka]]></category>
		<category><![CDATA[futuros]]></category>
		<category><![CDATA[programación reactiva]]></category>
		<category><![CDATA[scala]]></category>

		<guid isPermaLink="false">/?p=861</guid>
		<description><![CDATA[«Akka representa muchos conceptos nuevos que al principio cuesta asimilar. Para poder entenderlo mejor, he ido creando, poco a poco, una serie de ejemplos que me han permitido comprender mejor el paradigma que conlleva. Este artículo trata sobre esto, intentar tener una prueba de código de cada nuevo concepto que permita ver cual es su [&#8230;]]]></description>
		</item>
	</channel>
</rss>
