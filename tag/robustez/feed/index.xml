<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>robustez &#8211; Lógica Alternativa</title>
	<atom:link href="/tag/robustez/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description>&#039;¿Otro blog de informática? ... Todavía no&#039; .- Cuaderno de bitácora de Miguel R. Esteban</description>
	<lastBuildDate>Mon, 05 Sep 2022 18:20:40 +0000</lastBuildDate>
	<language>es-ES</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=4.8.20</generator>
	<item>
		<title>Akka por ejemplos. Sobre supervisión, bus de eventos, &#8230;</title>
		<link>/akka-por-ejemplos-sobre-supervision-bus-de-eventos/</link>
		<pubDate>Sun, 25 Oct 2015 22:34:53 +0000</pubDate>
		<dc:creator><![CDATA[Miguel R. Esteban Martín]]></dc:creator>
				<category><![CDATA[Java]]></category>
		<category><![CDATA[Programación]]></category>
		<category><![CDATA[actores]]></category>
		<category><![CDATA[akka]]></category>
		<category><![CDATA[bus de eventos]]></category>
		<category><![CDATA[futuros]]></category>
		<category><![CDATA[programación reactiva]]></category>
		<category><![CDATA[robustez]]></category>

		<guid isPermaLink="false">/?p=918</guid>
		<description><![CDATA[Esta es la segunda entrega de Akka por ejemplos. La primera trató sobre cual es el funcionamiento de la cola de mensajes de un actor, que es un router y como se envían mensajes entre actores. Ahora se tratarán temas como el control de fallos y la supervisión de actores, el bus de eventos de [&#8230;]]]></description>
		</item>
		<item>
		<title>﻿Pruebas de robustez y rendimiento, sobre cache y simple cache en PHP y más&#8230;</title>
		<link>/pruebas-de-robustez-y-rendimiento-sobre-cache-y-simple-cache-en-php-y-mas/</link>
		<comments>/pruebas-de-robustez-y-rendimiento-sobre-cache-y-simple-cache-en-php-y-mas/#comments</comments>
		<pubDate>Tue, 27 Jan 2015 23:54:19 +0000</pubDate>
		<dc:creator><![CDATA[Miguel R. Esteban Martín]]></dc:creator>
				<category><![CDATA[PHP]]></category>
		<category><![CDATA[Sistemas operativos]]></category>
		<category><![CDATA[cache]]></category>
		<category><![CDATA[linux]]></category>
		<category><![CDATA[rendimiento]]></category>
		<category><![CDATA[robustez]]></category>

		<guid isPermaLink="false">/?p=803</guid>
		<description><![CDATA[(más =&#62; simular concurrencia, modelo de actores, de “pull request”,&#8230;) “Este artículo trata sobre la importancia de las pruebas de robustez y de rendimiento y su relación directa con la calidad del software, y lo importante que es medir y representar los datos en una gráfica. Un caso práctico, un sistema de cache PHP simpe [&#8230;]]]></description>
		<wfw:commentRss>/pruebas-de-robustez-y-rendimiento-sobre-cache-y-simple-cache-en-php-y-mas/feed/</wfw:commentRss>
		<slash:comments>1</slash:comments>
		</item>
	</channel>
</rss>
